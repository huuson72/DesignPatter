package Singleton;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;
import java.io.InputStream;
import java.io.FileInputStream;
import java.io.IOException;

public class DatabaseConnection {
    private static DatabaseConnection instance;
    private Connection connection;
    private String url;
    private String username;
    private String password;

    private DatabaseConnection() {
        try {
            Properties props = new Properties();
            String configPath = "C:\\Users\\kstha\\DesignPattern\\KiemTraThem\\src\\config.ini";
            try (InputStream input = new FileInputStream(configPath)) {
                props.load(input);
                url = props.getProperty("database.url");
                username = props.getProperty("database.username");
                password = props.getProperty("database.password");
            }
            this.connection = DriverManager.getConnection(url);
        } catch (SQLException | IOException e) {
            System.out.println("Failed to create the database connection using URL: " + url);
            e.printStackTrace();
        }
    }

    public Connection getConnection() {
        return connection;
    }

    public static DatabaseConnection getInstance() {
        if (instance == null) {
            instance = new DatabaseConnection();
        } else {
            try {
                if (instance.getConnection().isClosed()) {
                    instance = new DatabaseConnection();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return instance;
    }
}
