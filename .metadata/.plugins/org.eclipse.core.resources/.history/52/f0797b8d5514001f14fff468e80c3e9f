package com.nvtrung.baikiemtraso1.implement;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import com.nvtrung.baikiemtraso1.model.SinhVien;
import com.nvtrung.baikiemtraso1.service.NguonDuLieu;

public class NguonDuLieuSqlServer implements NguonDuLieu {
    private String chuoiKetNoi;

    public NguonDuLieuSqlServer(String cnnst) {
        this.chuoiKetNoi = cnnst;
    }

    @Override
    public List<SinhVien> selectAll() {
        List<SinhVien> danhSachSinhVien = new ArrayList<>();
        String query = "SELECT * FROM SinhVien";
        try {
            Connection connection = DbHelper.getInstance().getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                int studentID = resultSet.getInt("MaSV");
                String fullName = resultSet.getString("HoTen");
                boolean gender = resultSet.getBoolean("GioiTinh");
                String dateOfBirth = resultSet.getString("NgaySinh");
                SinhVien sinhVien = new SinhVien(studentID, fullName, gender, dateOfBirth);
                danhSachSinhVien.add(sinhVien);
            }
            resultSet.close();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return danhSachSinhVien;
    }

    @Override
    public void insert(SinhVien sv) {
        String query = "INSERT INTO SinhVien (MaSV, HoTen, GioiTinh, NgaySinh) VALUES (?, ?, ?, ?)";
        try {
            Connection connection = DbHelper.getInstance().getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, sv.getStudentID());
            preparedStatement.setString(2, sv.getFullName());
            preparedStatement.setBoolean(3, sv.isGender());
            preparedStatement.setString(4, sv.getDateOfBirth());
            preparedStatement.executeUpdate();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void delete(String maSinhVien) {
        String query = "DELETE FROM SinhVien WHERE MaSV = ?";
        try {
            Connection connection = DbHelper.getInstance().getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, maSinhVien);
            preparedStatement.executeUpdate();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
